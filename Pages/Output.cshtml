@page
@using BankFileParser.Models
@model OutputModel
@{
    ViewData["Title"] = "Output";
}

<div class="container">
    <div class="row">
        <div class="col align-self-center">
            <div class="text-center pt-5">
                <h2 class="display-4">Parser Results</h2>
            </div>
        </div>
    </div>

    @if (!String.IsNullOrEmpty(Model.Error))
    {
        <div class="alert alert-danger" role="alert">
            @Model.Error
        </div>
    }

    <div class="row pt-3">
        <div class="col align-self-center">
            <div class="accordion">
                <div class="accordion-item">
                    <h2 class="accordion-header" id="debit-order-file">
                    <button class="accordion-button" type="button" data-bs-toggle="collapse" data-bs-target="#debit-order-accord" aria-expanded="true" aria-controls="debit-order-accord">
                        Parsed Debit Order File
                    </button>
                    </h2>
                    <div id="debit-order-accord" class="accordion-collapse collapse show" aria-labelledby="debit-order-file" data-bs-parent="#accordionExample">
                        <div class="accordion-body">
                            <table class="table">
                                <tr>
                                    <th scope="col">Account Holder</th>
                                    <th scope="col">Account Number</th>
                                    <th scope="col">Account Type</th>
                                    <th scope="col">Bank Name</th>
                                    <th scope="col">Branch</th>
                                    <th scope="col">Amount</th>
                                    <th scope="col">Date</th>
                                </tr>
                                @foreach (var deduction in Model.Orders.Deductions)
                                {
                                    <tr>
                                        <th scope="row">
                                            <span class="text-muted">
                                                @Html.DisplayFor(model => deduction.AccountHolder)
                                            </span>
                                        </th>
                                        <td>@Html.DisplayFor(model => deduction.AccountNumber)</td>
                                        <td>@Html.DisplayFor(model => deduction.AccountType)</td>
                                        <td>@Html.DisplayFor(model => deduction.BankName)</td>
                                        <td>@Html.DisplayFor(model => deduction.Branch)</td>
                                        <td>@Html.DisplayFor(model => deduction.Amount)</td>
                                        <td>@Html.DisplayFor(model => deduction.Date)</td>
                                    </tr>
                                }
                            </table>
                        </div>
                    </div>
                </div>
                @{
                    var count = 0;
                }
                @foreach (KeyValuePair<string, FlatFile> entry in Model.FlatFiles)
                {
                    <div class="accordion-item">
                        <h2 class="accordion-header d-flex" id="flat-file-@count">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#flat-file-accord-@count" aria-expanded="false" aria-controls="flat-file-accord-@count">
                                @Html.DisplayFor(model => entry.Value.Header.BankName) Flat File 
                            </button>
                        </h2>
                        <div id="flat-file-accord-@count" class="accordion-collapse collapse" aria-labelledby="flat-file-@count" data-bs-parent="#accordionExample">
                            <div class="accordion-body">
                                <table class="table">
                                    <tr>
                                        <th scope="row" class="font-monospace">@Html.DisplayFor(model => entry.Value.Header)</th>
                                    </tr>
                                    @foreach (var deduction in entry.Value.Deductions)
                                    {
                                        <tr>
                                            <td class="font-monospace">@Html.DisplayFor(model => deduction)</td>
                                        </tr>
                                    }
                                </table>
                                <div class="d-flex justify-content-end">
                                    <a download href="@Url.Page("Output", "Download", new { fileName = Model.OrdersFileName, flatName = entry.Value.Header.BankName})" class="btn btn-sm btn-outline-success mx-3">
                                        @Html.Raw("\u21E9") Download
                                    </a>
                                </div>
                            </div>
                        </div>
                    </div>

                    count++;
                }
            </div>
            <div class="d-flex justify-content-end mt-5">
                <a download href="@Url.Page("Output", "Download", new { fileName = Model.OrdersFileName, flatName = "all"})" class="btn btn-sm btn-outline-success mx-3">
                    @Html.Raw("\u21E9") Download All
                </a>
                <a asp-page="Index" class="btn btn-sm btn-outline-primary">
                    Back
                </a>
            </div>
        </div>
    </div>
</div>
